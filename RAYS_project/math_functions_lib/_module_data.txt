
Module data for: bin_to_uniform_grid_m

IMPLICIT NONE

integer, parameter :: rkind = selected_real_kind(15,307) ! kind parameter for reals

integer, parameter :: skind = selected_real_kind(6,37) ! kind parameter single precision

interface bin_to_uniform_grid

module procedure binner_single, binner_real

end interface


Module data for: bisect_m

IMPLICIT NONE

integer, parameter :: rkind = selected_real_kind(15,307) ! kind parameter for reals

integer, parameter :: skind = selected_real_kind(6,37) ! kind parameter single precision

INTEGER, PARAMETER :: max_iter = 1000

interface solve_bisection

module procedure bisect_single, bisect_real

end interface


Module data for: complete_elliptic_int_m

IMPLICIT NONE

integer, parameter :: rkind = selected_real_kind(15,307) ! kind parameter for reals

integer, parameter :: skind = selected_real_kind(6,37) ! kind parameter single precision

integer, parameter :: rk = rkind

real(KIND=rkind),parameter :: lolim = 3.D-78

real(KIND=rkind),parameter :: uplim = 1.D+75


Module data for: quad_trapezoid_m

IMPLICIT NONE

integer, parameter :: rkind = selected_real_kind(15,307) ! kind parameter for reals

integer, parameter :: skind = selected_real_kind(6,37) ! kind parameter single precision

interface trapezoid_quad

module procedure h_yvec_real, h_yvec_D, h_yvec_cmplx, h_yvec_cmplxD,&

& xvec_yvec_real, xvec_yvec_realD, xvec_yvec_cmplx, xvec_yvec_cmplxD

end interface

interface trapezoid_quad_cumulative

module procedure h_yvec_cum_real, h_yvec_cum_D,&

& xvec_yvec_cum_real, xvec_yvec_cum_D

end interface


Module data for: vectors3_m

IMPLICIT NONE

integer, parameter :: rkind = selected_real_kind(15,307) ! kind parameter for reals

integer, parameter :: skind = selected_real_kind(6,37) ! kind parameter single precision

interface cross_product

module procedure cross_product_D, cross_product_S

end interface

interface triple_product

module procedure triple_product_D, triple_product_S

end interface

interface triple_vector_product

module procedure triple_vector_product_D, triple_vector_product_S

end interface


Module data for: zfunctions_m

implicit none

integer, parameter :: rkind = selected_real_kind(15,307) ! kind parameter for reals

real(KIND=rkind), parameter :: zero = 0.0_rkind, one = 1.0_rkind, two = 2.0_rkind

real(KIND=rkind), parameter :: pi = atan(zero, -one), sqrt_pi = sqrt(pi)

Stuff for Cubic splines
logical :: initialized = .false.

Grid definition
integer, parameter :: nx = 2001

real(KIND=rkind), parameter ::  spline_range = 10.0_rkind

real(KIND=rkind), parameter ::  x_grid_min = -spline_range, x_grid_max = spline_range

real(KIND=rkind) ::  x_grid(nx)

bcspeval arguments
integer ibcxmin, ibcxmax, ibcthmin, ibcthmax, ilinx, ilnx,ier

real(KIND=rkind) :: bcxmin(nx),bcxmax(nx)      ! (nx) if used

real(KIND=rkind) :: bcthmin(nx),bcthmax(nx)  ! (inx) if used

real(KIND=rkind) ::  fsplRe(4, nx)=0., fsplIm(4, nx)=0.

integer, parameter :: iselect(3) = (/ 1, 0, 0 /) ! Can change to /1,1,1/ to get derivatives

real(KIND=rkind) ::  wk(nx)

interface zfun0

module procedure zfun0_S, zfun0_D

end interface

interface zfun

module procedure zfun_S, zfun_D

end interface

interface zfun_real_arg

module procedure zfun_real_arg_spline_D

end interface

interface zfun0_real_arg

module procedure zfun0_real_arg_D

end interface

